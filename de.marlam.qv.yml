app-id: de.marlam.qv
runtime: org.kde.Platform
runtime-version: '6.9'
sdk: org.kde.Sdk
command: qv
finish-args:
  # X11 + XShm access
  - --share=ipc
  - --socket=fallback-x11
  # Wayland access
  - --socket=wayland
  # OpenGL rendering
  - --device=dri
  # Read any scientific data file (mostly stored outside the xdg hierarchy,
  # but should still be in $HOME) and save a visualization alongside it
  - --filesystem=home
cleanup:
  - '/include'
  - '/lib/cfitsio*'
  - '/lib/cmake'
  - '/lib/pkgconfig'
  - '/lib/python*'
  - '/lib/*.a'
  - '/share/COPYING'
  - '/share/RELEASE.txt'
  - '/share/USING_HDF5_CMake.txt'
  - '/share/bash-completion'
  - '/share/cmake'
  - '/share/doc'
  - '/share/man'
modules:
  # Exiv2: used by libtgd to read png and jpeg metadata
  - name: exiv2
    buildsystem: cmake-ninja
    config-opts:
      - -DEXIV2_BUILD_EXIV2_COMMAND=OFF
      - -DEXIV2_ENABLE_INIH=OFF
    sources:
      - type: archive
        url: https://github.com/Exiv2/exiv2/archive/refs/tags/v0.28.5.tar.gz
        sha256: e1671f744e379a87ba0c984617406fdf8c0ad0c594e5122f525b2fb7c28d394d
    cleanup:
      - '/bin'
  # Dcmtk: used by libtgd to read DICOM medical image data
  - name: dcmtk
    buildsystem: cmake-ninja
    config-opts:
      - -DBUILD_APPS=OFF
      - -DBUILD_SHARED_LIBS=ON
    sources:
      - type: archive
        url: https://dicom.offis.de/download/dcmtk/dcmtk369/dcmtk-3.6.9.tar.gz
        sha256: b93ff5561244916a6e1e7e3ecccf2e26e6932c4edb5961268401cea7d4ab9c16
    cleanup:
      - '/bin'
  # libdeflate: prerequisite for OpenEXR
  - name: libdeflate
    buildsystem: cmake-ninja
    sources:
      - type: archive
        url: https://github.com/ebiggers/libdeflate/releases/download/v1.24/libdeflate-1.24.tar.gz
        sha256: a0dda1c4b804742066db07b9510876edd09cc0ca06cdc32c5dfe1b2016a26463
    cleanup:
      - '/bin'
  # Imath: prerequisite for OpenEXR
  - name: Imath
    buildsystem: cmake-ninja
    sources:
      - type: archive
        url: https://github.com/AcademySoftwareFoundation/Imath/releases/download/v3.1.12/Imath-3.1.12.tar.gz
        sha256: cb8ca9ca77ac4338ebbee911fc90c886011ac5b00088630bacf8ef6c6e522f0a
  # OpenEXR: used by libtgd to read EXR image data
  - name: OpenEXR
    buildsystem: cmake-ninja
    sources:
      - type: archive
        url: https://github.com/AcademySoftwareFoundation/openexr/releases/download/v3.3.3/openexr-3.3.3.tar.gz
        sha256: d819b9f76cbe63cc6b7476267659900f00aab79b636a83f0ecac2be669ca97b5
    cleanup:
      - '/bin'
  # cfitsio: used by libtgd to read FITS astronomy data
  - name: cfitsio
    buildsystem: cmake-ninja
    builddir: true
    sources:
      - type: archive
        url: https://github.com/HEASARC/cfitsio/archive/refs/tags/cfitsio-4.6.2.tar.gz
        sha256: 83f710f9441e7c703eeb485c9a475f50801ae7fad32ac7e356a406d318b4c02f
    cleanup:
      - '/bin'
  # Boost: recommended (though not strictly required) by poppler for performance reasons.
  # Note that poppler uses only the container headers, but its CMakeLists.txt wants to
  # detect all of Boost, so we build it all here.
  - name: boost
    buildsystem: simple
    build-commands:
      - ./bootstrap.sh --prefix=/app
      - ./b2 install
    sources:
      - type: archive
        url: https://archives.boost.io/release/1.88.0/source/boost_1_88_0.tar.bz2
        sha256: 46d9d2c06637b219270877c9e16155cbd015b6dc84349af064c088e9b5b12f7b
    cleanup:
      - '/lib/libboost*'
  # poppler: used by libtgd to read PDFs
  - name: poppler
    buildsystem: cmake-ninja
    config-opts:
      - -DENABLE_GLIB=OFF
      - -DENABLE_GOBJECT_INTROSPECTION=OFF
      - -DENABLE_QT5=OFF
      - -DENABLE_QT6=OFF
      - -DENABLE_LIBOPENJPEG=none
      - -DENABLE_CMS=none
      - -DENABLE_LIBCURL=OFF
    sources:
      - type: archive
        url: https://poppler.freedesktop.org/poppler-25.05.0.tar.xz
        sha256: 9b1627c5b76816ac5e4052a03f5b605ba40b45cf06b02cadd0479620b499ab38
    cleanup:
      - '/bin'
  # pfstools: libpfs is used by libtgd to read PFS image data
  - name: pfstools
    buildsystem: cmake-ninja
    sources:
      - type: archive
        url: https://altushost-swe.dl.sourceforge.net/project/pfstools/pfstools/2.2.0/pfstools-2.2.0.tgz
        sha256: 9bf6844985663226c21998eeb43c261acb8e4b3891b9a91b729554406289d7ca
    cleanup:
      - '/bin'
  # hdf5: used by libtgd to read HDF5 data files
  - name: hdf5
    buildsystem: cmake-ninja
    builddir: true
    sources:
      - type: archive
        url: https://support.hdfgroup.org/releases/hdf5/v1_14/v1_14_6/downloads/hdf5-1.14.6.tar.gz
        sha256: e4defbac30f50d64e1556374aa49e574417c9e72c6b1de7a4ff88c4b1bea6e9b
        strip-components: 2
    cleanup:
      - '/bin'
  # matio: used by libtgd to read Matlab .mat files
  - name: matio
    buildsystem: cmake-ninja
    sources:
      - type: archive
        url: https://github.com/tbeu/matio/releases/download/v1.5.28/matio-1.5.28.tar.gz
        sha256: 9da698934a21569af058e6348564666f45029e6c2b0878ca0d8f9609bf77b8d8
    cleanup:
      - '/bin'
  # ImageMagick: used by libtgd to read a few exotic file formats that don't have their own importer
  - name: ImageMagick
    buildsystem: autotools
    sources:
      - type: archive
        url: https://github.com/ImageMagick/ImageMagick/archive/refs/tags/7.1.1-47.tar.gz
        sha256: 818e21a248986f15a6ba0221ab3ccbaed3d3abee4a6feb4609c6f2432a30d7ed
    cleanup:
      - '/bin'
  # PROJ: prerequisite for GDAL
  - name: PROJ
    buildsystem: cmake-ninja
    config-opts:
      - -DBUILD_TESTING=OFF
    sources:
      - type: archive
        url: https://download.osgeo.org/proj/proj-9.6.0.tar.gz
        sha256: d8cae521c311c39513193657e75767f7cfbf2f91bd202fcd4a200028d3b57e14
    cleanup:
      - '/bin'
  # GDAL: used by libtgd to read all sorts of Remote Sensing image data
  - name: GDAL
    buildsystem: cmake-ninja
    config-opts:
      - -DACCEPT_MISSING_SQLITE3_RTREE:BOOL=ON
      - -DGDAL_USE_POPPLER=OFF
    sources:
      - type: archive
        url: https://github.com/OSGeo/gdal/releases/download/v3.11.0/gdal-3.11.0.tar.gz
        sha256: 723d7b04e0f094be2636128d15165b45059ac5e53f143cbbd93280af0b347abd
    cleanup:
      - '/bin'
  # tgd: used by qv to read images and data files in almost any format, and manage the data in memory
  - name: tgd
    buildsystem: cmake-ninja
    config-opts:
      - -DTGD_BUILD_TOOL=OFF
      - -DTGD_BUILD_TOOL_MANPAGE=OFF
      - -DTGD_BUILD_DOCUMENTATION=OFF
    sources:
      - type: archive
        url: https://marlam.de/tgd/releases/tgd-5.0.tar.gz
        sha256: b83f795554014b2fa4156148bf038db233c67e303c4a451c48250d92dbe93bd8
  # finally, qv.
  - name: qv
    buildsystem: cmake-ninja
    sources:
      - type: archive
        url: https://marlam.de/qv/releases/qv-6.0.tar.gz
        sha256: 831580938715e026a50944a8112acfd6cc8667fae76333620379c105c10dc67a
