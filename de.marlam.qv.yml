app-id: de.marlam.qv
runtime: org.kde.Platform
runtime-version: '6.7'
sdk: org.kde.Sdk
command: qv
finish-args:
  # X11 + XShm access
  - --share=ipc
  - --socket=fallback-x11
  # Wayland access
  - --socket=wayland
  # OpenGL rendering
  - --device=dri
  # Read any scientific data file (mostly stored outside the xdg hierarchy,
  # but should still be in $HOME) and save a visualization alongside it
  - --filesystem=home
cleanup:
  - '/include'
  - '/lib/cfitsio*'
  - '/lib/cmake'
  - '/lib/pkgconfig'
  - '/lib/python*'
  - '/lib/*.a'
  - '/share/COPYING'
  - '/share/RELEASE.txt'
  - '/share/USING_HDF5_CMake.txt'
  - '/share/bash-completion'
  - '/share/cmake'
  - '/share/doc'
  - '/share/man'
modules:
  # Exiv2: used by libtgd to read png and jpeg metadata
  - name: exiv2
    buildsystem: cmake-ninja
    config-opts:
      - -DEXIV2_BUILD_EXIV2_COMMAND=OFF
      - -DEXIV2_ENABLE_INIH=OFF
    sources:
      - type: archive
        url: https://github.com/Exiv2/exiv2/archive/refs/tags/v0.28.2.tar.gz
        sha256: 543bead934135f20f438e0b6d8858c55c5fcb7ff80f5d1d55489965f1aad58b9
    cleanup:
      - '/bin'
  # Dcmtk: used by libtgd to read DICOM medical image data
  - name: dcmtk
    buildsystem: cmake-ninja
    config-opts:
      - -DBUILD_APPS=OFF
      - -DBUILD_SHARED_LIBS=ON
    sources:
      - type: archive
        url: https://dicom.offis.de/download/dcmtk/dcmtk368/dcmtk-3.6.8.tar.gz
        sha256: 232076655503138debf2f624109f1799e539354f186ce4e04b27cf82a9d8720f
    cleanup:
      - '/bin'
  # libdeflate: prerequisite for OpenEXR
  - name: libdeflate
    buildsystem: cmake-ninja
    sources:
      - type: archive
        url: https://github.com/ebiggers/libdeflate/releases/download/v1.20/libdeflate-1.20.tar.gz
        sha256: c52cf0239fd644d71c9e88613dd7431a5306ebee1280c5791c71ca264869250a
  # Imath: prerequisite for OpenEXR
  - name: Imath
    buildsystem: cmake-ninja
    sources:
      - type: archive
        url: https://github.com/AcademySoftwareFoundation/Imath/archive/refs/tags/v3.1.11.tar.gz
        sha256: 9057849585e49b8b85abe7cc1e76e22963b01bfdc3b6d83eac90c499cd760063
  # OpenEXR: used by libtgd to read EXR image data
  - name: OpenEXR
    buildsystem: cmake-ninja
    sources:
      - type: archive
        url: https://github.com/AcademySoftwareFoundation/openexr/archive/refs/tags/v3.2.4.tar.gz
        sha256: 81e6518f2c4656fdeaf18a018f135e96a96e7f66dbe1c1f05860dd94772176cc
    cleanup:
      - '/bin'
  # cfitsio: used by libtgd to read FITS astronomy data
  - name: cfitsio
    buildsystem: cmake-ninja
    builddir: true
    sources:
      - type: archive
        url: https://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/cfitsio-4.4.0.tar.gz
        sha256: 95900cf95ae760839e7cb9678a7b2fad0858d6ac12234f934bd1cb6bfc246ba9
  # Boost: recommended (though not strictly required) by poppler for performance reasons.
  # Note that poppler uses only the container headers, but its CMakeLists.txt wants to
  # detect all of Boost, so we build it all here.
  - name: boost
    buildsystem: simple
    build-commands:
      - ./bootstrap.sh --prefix=/app
      - ./b2 install
    sources:
      - type: archive
        url: https://archives.boost.io/release/1.85.0/source/boost_1_85_0.tar.bz2
        sha256: 7009fe1faa1697476bdc7027703a2badb84e849b7b0baad5086b087b971f8617
    cleanup:
      - '/lib/libboost*'
  # poppler: used by libtgd to read PDFs
  - name: poppler
    buildsystem: cmake-ninja
    config-opts:
      - -DENABLE_GLIB=OFF
      - -DENABLE_GOBJECT_INTROSPECTION=OFF
      - -DENABLE_QT5=OFF
      - -DENABLE_QT6=OFF
      - -DENABLE_LIBOPENJPEG=none
      - -DENABLE_CMS=none
      - -DENABLE_LIBCURL=OFF
    sources:
      - type: archive
        url: https://poppler.freedesktop.org/poppler-24.06.0.tar.xz
        sha256: 0cdabd495cada11f6ee9e75c793f80daf46367b66c25a63ee8c26d0f9ec40c76
    cleanup:
      - '/bin'
  # pfstools: libpfs is used by libtgd to read PFS image data
  - name: pfstools
    buildsystem: cmake-ninja
    sources:
      - type: archive
        url: https://altushost-swe.dl.sourceforge.net/project/pfstools/pfstools/2.2.0/pfstools-2.2.0.tgz
        sha256: 9bf6844985663226c21998eeb43c261acb8e4b3891b9a91b729554406289d7ca
    cleanup:
      - '/bin'
  # hdf5: used by libtgd to read HDF5 data files
  - name: hdf5
    buildsystem: cmake-ninja
    builddir: true
    sources:
      - type: archive
        url: https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.14/hdf5-1.14.4/src/hdf5-1.14.4-3.tar.gz
        sha256: 019ac451d9e1cf89c0482ba2a06f07a46166caf23f60fea5ef3c37724a318e03
        strip-components: 2
    cleanup:
      - '/bin'
  # matio: used by libtgd to read Matlab .mat files
  - name: matio
    buildsystem: cmake-ninja
    sources:
      - type: archive
        url: https://github.com/tbeu/matio/releases/download/v1.5.27/matio-1.5.27.tar.gz
        sha256: 0a6aa00b18c4512b63a8d27906b079c8c6ed41d4b2844f7a4ae598e18d22d3b3
    cleanup:
      - '/bin'
  # ImageMagick: used by libtgd to read a few exotic file formats that don't have their own importer
  - name: ImageMagick
    buildsystem: autotools
    sources:
      - type: archive
        url: https://github.com/ImageMagick/ImageMagick/archive/refs/tags/7.1.1-33.tar.gz
        sha256: 3fe527ce04ee5485dc6f7726eccd05c962add5c5d91843c5abf6c608e4f55330
    cleanup:
      - '/bin'
  # PROJ: prerequisite for GDAL
  - name: PROJ
    buildsystem: cmake-ninja
    config-opts:
      - -DBUILD_TESTING=OFF
    sources:
      - type: archive
        url: https://download.osgeo.org/proj/proj-9.4.1.tar.gz
        sha256: ffe20170ee2b952207adf8a195e2141eab12cda181e49fdeb54425d98c7171d7
    cleanup:
      - '/bin'
  # GDAL: used by libtgd to read all sorts of Remote Sensing image data
  - name: GDAL
    buildsystem: cmake-ninja
    config-opts:
      - -DACCEPT_MISSING_SQLITE3_RTREE:BOOL=ON
      - -DGDAL_USE_POPPLER=OFF
    sources:
      - type: archive
        url: https://github.com/OSGeo/gdal/releases/download/v3.9.0/gdal-3.9.0.tar.gz
        sha256: 3b29b573b60d156cf160805290474b625c4197ca36a79fd14f83ec8f77f29ba0
    cleanup:
      - '/bin'
  # tgd: used by qv to read images and data files in almost any format, and manage the data in memory
  - name: tgd
    buildsystem: cmake-ninja
    config-opts:
      - -DTGD_BUILD_TOOL=OFF
      - -DTGD_BUILD_TOOL_MANPAGE=OFF
      - -DTGD_BUILD_DOCUMENTATION=OFF
    sources:
      - type: archive
        url: https://marlam.de/tgd/releases/tgd-4.3.tar.gz
        sha256: 76abcf3ef7f6d843182faeabef317091077c9d3afd5a878e425ce4e4a4ea25c9
      - type: patch
        path: tgd-ffmpeg-compat.patch
  # finally, qv.
  - name: qv
    buildsystem: cmake-ninja
    sources:
      - type: archive
        url: https://marlam.de/qv/releases/qv-5.2.tar.gz
        sha256: 7f9db0754f8a691b8547df78ccb136664642c3f8d0e9b000784703b7503e4c33
